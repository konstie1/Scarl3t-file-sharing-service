const fs = require('fs');
const path = require('path');
const config = require('./config.json');
const TelegramBot = require('node-telegram-bot-api');



// –û–±—ä—è–≤–ª–µ–Ω–∏–µ DB
const files = require('../db/files.json');
const users = require('../db/users.json');

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ë–î
function savedbusers() {

    fs.writeFile(`../db/users.json`, JSON.stringify(users),(err)=>{if(err) console.log(err);});

}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ë–î
function savedbfiles() {

    fs.writeFile(`../db/files.json`, JSON.stringify(files),(err)=>{if(err) console.log(err);});

}

function ifdbusers(chatId, username, dateAdded) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –¥–∞–Ω–Ω—ã–º chatId
    if (users[chatId] === undefined) {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        users[chatId] = { 
            id: chatId,
            page: 1,
            filespage: 0,
            username: username,
            dateAdded: dateAdded,
            files: [],
            filescods: [],
            shared: [],
            status: "User",
            balance: 0,
            transferhistory: [],
            fileshistory: []
        };
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ë–î
        savedbusers();
    } else {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î.");
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —é–∑–µ—Ä–Ω–µ–π–º–∞
function renameusername(chatId, username) {

    console.log(123)

}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–¥
function convertUnixTimeToDateFormat(timestamp) {

    const date = new Date(timestamp);
    const day = date.getDate().toString().padStart(2, '0');
    const month = (date.getMonth() + 1).toString().padStart(2, '0');
    const year = date.getFullYear().toString();
    const hours = date.getHours().toString().padStart(2, '0');
    const minutes = date.getMinutes().toString().padStart(2, '0');
  
    return `*${day}.${month}.${year} –≤ ${hours}:${minutes}*`;

}

// –ü–µ—Ä–µ–≤–æ–¥ –±–∞–π—Ç–æ–≤ –≤ –º–µ–≥–∞–±–∞–π—Ç—ã
function bytesToMegabytes(bytes) {

    const megabytes = bytes / (1024 * 1024);
    return megabytes.toFixed(2); // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π

}

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ —á–∏—Å–µ–ª –≤–∏–¥–∞ XXXX-XXXX-XXXX-XXXX
function generatePassword() {

    let password = '';
  
    for (let i = 0; i < 16; i++) {
        if (i > 0 && i % 4 === 0) {
            password += '-';
        }
        password += Math.floor(Math.random() * 10);
    }
  
    return password;

}

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä ID
function makeid(length) {

    var result           = '';
    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var charactersLength = characters.length;
    for ( var i = 0; i < length; i++ ) {
        result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
    return result;

}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(config.token, {polling: true});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {

    if (msg.chat.type === 'supergroup' || msg.chat.type === 'group') return bot.sendMessage(msg.chat.id, "‚õî *–û—à–∏–±–∫–∞*! –ö–æ–º–∞–Ω–¥—ã *—Ä–∞–±–æ—Ç–∞—é—Ç* —Ç–æ–ª—å–∫–æ –≤ *–õ–°*.", { reply_to_message_id: msg.message_id, parse_mode: "Markdown" });
    
    const chatId = msg.chat.id;
    const username = msg.from.username;
    const dateAdded = Date.now();
    renameusername(chatId, username)

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    const inlineKeyboard = {
        inline_keyboard: [
            [
                {
                    text: 'üëã –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é',
                    callback_data: 'backmenu',
                },
            ],
        ],
    };

    const captionText = `üöÄ –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç—É –≤–º–µ—Å—Ç–µ!\n\nüìù –ú–æ—è *–æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è* –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ–±—ã —Å–ª—É–∂–∏—Ç—å —Ç–µ–±–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ *—Ñ–∞–π–ª–æ–æ–±–º–µ–Ω–Ω–∏–∫–∞* –∏ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö. –Ø –≥–æ—Ç–æ–≤ —Ö—Ä–∞–Ω–∏—Ç—å *—Ç–≤–æ–∏ —Ñ–∞–π–ª—ã* –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, *–¥–æ—Å—Ç—É–ø–Ω–æ–π —Ç–µ–±–µ* –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.\n\n‚ùï –í—Å–µ –≤–∞—à–∏ *—Ñ–∞–π–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤–∞–º*, –Ω–æ –í—ã *–º–æ–∂–µ—Ç–µ* –¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏ —Å –¥—Ä—É–∑—å—è–º–∏ –ø–æ *–∫–æ–¥—É* –∏–ª–∏ –¥a–≤–∞—Ç—å *–¥–æ—Å—Ç—É–ø* —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è *–ø–æ —Ä–∞–∑–º–µ—Ä—É* –∏ *–∫–æ–ª–∏—á–µ—Å—Ç–≤—É* —Ñ–∞–π–ª–æ–≤ *–Ω–µ—Ç*.\n\nüõ° –Ø —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω *—ç–Ω—Ç—É–∑–∏–∞—Å—Ç–∞–º–∏* –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª–µ–Ω, —Ç–≤–æ—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–ª—è –º–µ–Ω—è *–Ω–∞–∏–≤—ã—Å—à–∏–π* –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç! –í–ª–∞–¥–µ–ª—å—Ü–∞–º *Scarl3t* –±–µ–∑—Ä–∞–∑–ª–∏—á–Ω–æ, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —Ç—ã *—Å–æ—Ö—Ä–∞–Ω—è–µ—à—å* —É –º–µ–Ω—è, –µ—Å–ª–∏ —ç—Ç–æ *–Ω–µ –º–µ—à–∞–µ—Ç* –º–æ–µ–π —Ä–∞–±–æ—Ç–µ.\n\nüì• –ß—Ç–æ–±—ã *—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å* —Ñ–∞–π–ª, –ø—Ä–æ—Å—Ç–æ *–æ—Ç–ø—Ä–∞–≤—å* –µ–≥–æ –º–Ω–µ, –∏ —è —Å–æ—Ö—Ä–∞–Ω—é –µ–≥–æ *–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ*. –¢—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—à—å *–ø–æ–ª—É—á–∏—Ç—å* –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø, –ø—Ä–æ—Å—Ç–æ *–æ–±—Ä–∞—Ç–∏–≤—à–∏—Å—å* –∫–æ –º–Ω–µ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º. –Ø –≥–æ—Ç–æ–≤ —Å—Ç–∞—Ç—å —Ç–≤–æ–∏–º –Ω–∞–¥–µ–∂–Ω—ã–º *–ø–æ–º–æ—â–Ω–∏–∫–æ–º* –≤ —Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏ –ø–µ—Ä–µ–¥–∞—á–∏ —Ç–≤–æ–∏—Ö –¥–∞–Ω–Ω—ã—Ö! \n\n*–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é*: /menu`;
    await bot.sendMessage(msg.chat.id, `üëã *–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!*`, { parse_mode: 'Markdown' });
    await bot.sendPhoto(chatId, "https://media.discordapp.net/attachments/1088507989956231188/1113582608316633160/Frame_2.png?width=1440&height=555", { caption: captionText, parse_mode: "Markdown", reply_markup: inlineKeyboard });

});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu
bot.onText(/\/menu/, async (msg) => {

    if (msg.chat.type === 'supergroup' || msg.chat.type === 'group') return bot.sendMessage(msg.chat.id, "‚õî *–û—à–∏–±–∫–∞*! –ö–æ–º–∞–Ω–¥—ã *—Ä–∞–±–æ—Ç–∞—é—Ç* —Ç–æ–ª—å–∫–æ –≤ *–õ–°*.", { reply_to_message_id: msg.message_id, parse_mode: "Markdown" });

    const chatId = msg.chat.id;
    const username = msg.from.username;
    const dateAdded = Date.now();

    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ db
    ifdbusers(chatId, username, dateAdded);
    renameusername(chatId, username)

    const userId = users[chatId].id;
    const status = users[chatId].status;
    const sharedlength = (users[chatId].shared).length;
    const filescodslength = (users[chatId].filescods).length;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    const inlineKeyboard = {
        inline_keyboard: [
            [
                {
                    text: 'üìÑ –§–∞–π–ª—ã',
                    callback_data: 'files',
                },
            ],
            [
                {
                    text: '‚öô –ê–∫–∫–∞—É–Ω—Ç',
                    callback_data: 'account',
                },
                {
                    text: 'üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞',
                    callback_data: 'help',
                },
            ],
        ],
    };

    const captionText = `üì∞ –ú–µ–Ω—é: *–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ* –¥–µ–π—Å—Ç–≤–∏–µ\n\nü§ñ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ë–æ—Ç–µ*:\n‚îú *–ê–π–¥–∏*: \`${config.id}\`\n‚îú *–í–µ—Ä—Å–∏—è*: \`${config.version}\`\n‚îî *–°—Å—ã–ª–∫–∞*: ${config.botlink}\n\nüîé *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—Å*:\n‚îú *–ê–π–¥–∏*: \`${userId}\`\n‚îú *–£—Ä–æ–≤–µ–Ω—å*: \`${status}\`\n‚îú *–ö–æ–ª-–≤–æ —Ñ–∞–π–ª–æ–≤*: ${filescodslength}\n‚îî *–ö–æ–ª-–≤–æ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*: ${sharedlength}\n\n*–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*: /help`;
    await bot.sendPhoto(msg.chat.id, "https://media.discordapp.net/attachments/1088507989956231188/1113582608643805236/Frame_3.png?width=1440&height=555", { caption: captionText, parse_mode: "Markdown", reply_markup: inlineKeyboard });

});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, async (msg) => {

    if (msg.chat.type === 'supergroup' || msg.chat.type === 'group') return bot.sendMessage(msg.chat.id, "‚õî *–û—à–∏–±–∫–∞*! –ö–æ–º–∞–Ω–¥—ã *—Ä–∞–±–æ—Ç–∞—é—Ç* —Ç–æ–ª—å–∫–æ –≤ *–õ–°*.", { reply_to_message_id: msg.message_id, parse_mode: "Markdown" });
    
    const captionText = `üì∞ –ú–µ–Ω—é: *–ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å*\n\nüåä –û—Å–Ω–æ–≤–Ω–∞—è *–º–æ—è –∑–∞–¥–∞—á–∞* —ç—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ *—Ñ–∞–π–ª–æ–≤*, –ª—é–±—ã–º —Ñ–∞–π–ª–æ–º *–≤—ã –º–æ–∂–µ—Ç–µ* –ø–æ–¥–µ–ª–∏—Ç—å—Å—è, *—Å–∫–∏–Ω—É–≤* –∫–ª—é—á.\n\nüö¨ *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è*: \n\nüéõÔ∏è /menu - *–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞*\nüó∫Ô∏è /help - *–ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å –ø–æ –±–æ—Ç—É* \`(–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞)\`\nüìÉ /start - *–î–∞—Å—Ç –≤–∞–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ*\n\nüëã *–í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ*!`;
    await bot.sendPhoto(msg.chat.id, "https://media.discordapp.net/attachments/1088507989956231188/1122879847325253765/Frame_15.png?width=1439&height=555", { caption: captionText, parse_mode: "Markdown"});    

});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–±—ç–∫–æ–≤ (–Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏)
bot.on('callback_query', async (query) => {

    const buttonsnames = ["left", "delete", "sendfile", "sharedfiles", "ringth", "myfiles", "files", "backmenu", "help", "sendfile", "addremovefile", "accesslist", "regenerationkey", "deletefile", "account"]
    const chatId = query.message.chat.id;
    const messageId = query.message.message_id;
    const data = query.data;
    
    const username = query.from.username;
    const dateAdded = Date.now();
    renameusername(chatId, username)
    

    if(!users[messageId]);{
        users[messageId] ={ 
            page:1,
            filespage:0,
        }
        savedbusers();
    };

    ifdbusers(chatId, username, dateAdded);
    
    if(data === 'account'){

        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                        text: 'üèÜ Boosty',
                        url: 'https://boosty.to/c1edue/donate',
                    },
                    {
                        text: '‚¨Ö –ù–∞–∑–∞–¥',
                        callback_data: 'backmenu',
                    },
                ],
            ],
        };

        const userId = chatId;
        const status = users[chatId].status;
        const sharedlength = (users[chatId].shared).length;
        const filescodslength = (users[chatId].filescods).length;

        let sub, chats;
        switch (status) {
            
            case 'MVP': {
                chats = '[‚òëÔ∏è –ù–∞–∂–º–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞](https://t.me/+IeXnoGYFgLMxMzRi)'; sub = 'MVP';
                break;
            }

            default: {
                chats = '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'; sub = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
                break;
            } 
        }

        const mediaPhoto = "https://cdn.discordapp.com/attachments/1088507989956231188/1116687669695610890/Frame_7.png";
        const captionText = `üèÜ *–ü–æ–¥–ø–∏—Å–∫–∞*:\n‚îî *–°—Ç–∞—Ç—É—Å*: \`${sub}\`\n\nüí∑ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–Ω–∞–ª—ã*:\n‚îî ${chats}\n\nüîé *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—Å*:\n‚îú *–ê–π–¥–∏*: \`${userId}\`\n‚îú *–£—Ä–æ–≤–µ–Ω—å*: \`${status}\`\n‚îú *–ö–æ–ª-–≤–æ —Ñ–∞–π–ª–æ–≤*: ${filescodslength}\n‚îî *–ö–æ–ª-–≤–æ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*: ${sharedlength}\n\n‚ùó –ß—Ç–æ–±—ã *–æ—Ñ–æ—Ä–º–∏—Ç—å* –ø–æ–¥–ø–∏—Å–∫—É –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ *boosty* –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ *–∂–µ–ª–∞–µ–º—ã–π —Ç–∞—Ä–∏—Ñ* ‚ùó`;
        await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
        await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
    
    }

    if(data === 'key') {

        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                        text: '‚¨Ö –ù–∞–∑–∞–¥',
                        callback_data: 'files',
                    },
                ]
            ],
        };

        const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
        const captionText = `üì∞ –ú–µ–Ω—é: *–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª—é—á*\n\n‚ùï –î–ª—è *–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ* —Ñ–∞–π–ª–∞ *–ø–æ –∫–ª—é—á—É*, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–ª—é—á *–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ* —Ñ–∞–π–ª–∞ *–≤ —á–∞—Ç* —Å –±–æ—Ç–æ–º.\n\n*–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*: /help`;
        await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
        await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });

    }

    if(data === 'delete') {

        bot.deleteMessage(chatId, messageId);

    }

    if(data === 'regenerationkey') {

        ifdbusers(chatId, username, dateAdded);
        if(!files[users[messageId].filespage]);
        filepick = users[messageId].filespage;

        const NewCodePassword = generatePassword();
        files[NewCodePassword] = {
            fileid:filepick,
            code:NewCodePassword,
            dateAdded:Date.now(),
            userid:chatId,
            memberused:[],
        }

        files[filepick].code = NewCodePassword;
        savedbfiles();

        if(1==1) {

            const inlineKeyboard = {
                inline_keyboard: [
                  [
                    {
                      text: '‚ùå –£–¥–∞–ª–∏—Ç—å',
                      callback_data: 'delete',
                    },
                  ],
                ],
            };
    
            await bot.sendMessage(chatId, `‚ò∫ –í—ã *—É—Å–ø–µ—à–Ω–æ* —Å–º–µ–Ω–∏–ª–∏ *–∫–ª—é—á* –Ω–∞ \`${NewCodePassword}\``, { reply_to_message_id: messageId, reply_markup: inlineKeyboard, parse_mode: 'Markdown' });
        
        }

        if(1==1) {

            file = filepick;

            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            const inlineKeyboard = {
                inline_keyboard: [
                    [
                        {
                            text: '‚úâ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –≤ —á–∞—Ç',
                            callback_data: 'sendfile',
                        },
                    ],
                    [
                        {
                            text: 'üìä –°–ø–∏—Å–æ–∫ –ª—é–¥–µ–π —Å –¥–æ—Å—Ç—É–ø–æ–º',
                            callback_data: 'accesslist',
                        },
                    ],
                    [
                        {
                            text: 'üîë –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞',
                            callback_data: 'regenerationkey',
                        },
                        {
                            text: 'üóë –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª',
                            callback_data: 'deletefile',
                        },
                    ],
                    [
                        {
                            text: '‚¨Ö –ù–∞–∑–∞–¥',
                            callback_data: 'myfiles',
                        },
                    ],
                ],
            };

            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–î–µ–π—Å—Ç–≤–∏—è —Å —Ñ–∞–π–ª–æ–º*\n\nüíæ *–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*:\n‚îú *–ù–∞–∑–≤–∞–Ω–∏–µ*: \`${files[file].name}\`\n‚îú *–¢–∏–ø*: ${files[file].type}\n‚îú *–ö–ª—é—á*: \`${files[file].code}\`\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[file].size)}–ú–±\`\n‚îú *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[file].dateAdded)}\n‚îî *–ò–º–µ—é—Ç –¥–æ—Å—Ç—É–ø*: *${(files[file].access).length}*`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
        
        }

    }

    if (data === 'sendfile') {
        // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è ifdbusers –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        ifdbusers(chatId, username, dateAdded);
        // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        const filepick = users[messageId].filespage;
        console.log(filepick)
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if (!files[filepick]) return;
    
        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                        text: '‚ùå –£–¥–∞–ª–∏—Ç—å',
                        callback_data: 'delete',
                    },
                ],
            ],
        };
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        const msg = files[filepick].groupIdFile;
    
        if (files[filepick].type == "–í–∏–¥–µ–æ") {
            await bot.sendVideo(chatId, msg.video.file_id, { reply_to_message_id: messageId, reply_markup: inlineKeyboard });
        } else if (files[filepick].type == "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ") {
            const photo = msg.photo[msg.photo.length - 1];
            await bot.sendPhoto(chatId, photo.file_id, { reply_to_message_id: messageId, reply_markup: inlineKeyboard });
        } else if (files[filepick].type == "–§–∞–π–ª") {
            bot.sendDocument(chatId, msg.document.file_id, { reply_to_message_id: messageId, reply_markup: inlineKeyboard });
        }
    }
    

    if(data === 'sharedleft') {

        var userfiles = users[chatId].filescods;
        ifdbusers(chatId, username, dateAdded);

        var text = "";
        var inline_keyboard = [[]];
        var mass = 0;

        page = users[messageId].page - 1;
        users[messageId].page = page;
        savedbusers();

        if(page <= 1) {

            page = 1;
            users[messageId].page = 1;
            savedbusers();
            for(i=0; i < userfiles.length; i++) {

                if(i==6) break;

                if (i % 3 === 0) {
                    mass++;
                    inline_keyboard.push([]);
                } 

                text += `\n\n*${i+1});* \`${files[userfiles[i]].name}\`\n‚îú *–¢–∏–ø*: ${files[userfiles[i]].type}\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[userfiles[i]].size)}–ú–±\`\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[userfiles[i]].dateAdded)}`
                inline_keyboard[mass].push({
                    text: `‚ö° –§–∞–π–ª #${i+1}`,
                    callback_data: `${files[userfiles[i]].id}`,
                });

            }
            if(userfiles.length > 6) {

                inline_keyboard.push([
                    {
                        text: ' ',
                        callback_data: 'pusto',
                    },
                    {
                        text: `${page}/${Math.ceil(userfiles.length/6)}`,
                        callback_data: 'pusto',
                    },
                    {
                        text: '‚û°',
                        callback_data: 'sharedringth',
                    }
                ]);

            }
            if(userfiles.length <= 6) {

                inline_keyboard.push([
                    {
                        text: ' ',
                        callback_data: 'pusto',
                    },
                    {
                        text: `${page}/${Math.ceil(userfiles.length/6)}`,
                        callback_data: 'pusto',
                    },
                    {
                        text: ' ',
                        callback_data: 'pusto',
                    }
                ]);

            }

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'sharedfiles',
            }]);

            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }

        for (let i=(page-1)*6; i < userfiles.length; i++) {

            if (i==(((page-1)*6)+6)) break;

            if (i % 3 === 0) {
                mass++;
                inline_keyboard.push([]);
            } 

            text += `\n\n*${i+1});* \`${files[userfiles[i]].name}\`\n‚îú *–¢–∏–ø*: ${files[userfiles[i]].type}\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[userfiles[i]].size)}–ú–±\`\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[userfiles[i]].dateAdded)}`
            inline_keyboard[mass].push({
                text: `‚ö° –§–∞–π–ª #${i+1}`,
                callback_data: `${files[userfiles[i]].id}`,
            });

        }   

        if(page == Math.ceil(userfiles.length/6)) {

            inline_keyboard.push([
                {
                    text: ' ',
                    callback_data: 'pusto',
                },
                {
                    text: `${page}/${Math.ceil(userfiles.length/6)}`,
                    callback_data: 'pusto',
                },
                {
                    text: '‚û°',
                    callback_data: 'sharedringth',
                }
            ]);

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'sharedfiles',
            }]);

            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }

        if(page !== Math.ceil(userfiles.length/6)) {

            inline_keyboard.push([
                {
                    text: '‚¨Ö',
                    callback_data: 'sharedleft',
                },
                {
                    text: `${page}/${Math.ceil(userfiles.length/6)}`,
                    callback_data: 'pusto',
                },
                {
                    text: '‚û°',
                    callback_data: 'sharedringth',
                }
            ]);

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'sharedfiles',
            }]);

            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }

    }

    if(data === 'left') {

        var userfiles = users[chatId].filescods;
        ifdbusers(chatId, username, dateAdded);

        var text = "";
        var inline_keyboard = [[]];
        var mass = 0;

        page = users[messageId].page - 1;
        users[messageId].page = page;
        savedbusers();

        if(page <= 1) {

            page = 1;
            users[messageId].page = 1;
            savedbusers();
            for(i=0; i < userfiles.length; i++) {
                if(i==6) {
                    break;
                };
                if (i % 3 === 0) {
                    mass++;
                    inline_keyboard.push([]);
                } 
                text += `\n\n*${i+1});* \`${files[userfiles[i]].name}\`\n‚îú *–¢–∏–ø*: ${files[userfiles[i]].type}\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[userfiles[i]].size)}–ú–±\`\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[userfiles[i]].dateAdded)}`
                inline_keyboard[mass].push({
                    text: `üíæ –§–∞–π–ª #${i+1}`,
                    callback_data: `${files[userfiles[i]].id}`,
                });

            }

            if(userfiles.length > 6) {

                inline_keyboard.push([
                    {
                        text: ' ',
                        callback_data: 'pusto',
                    },
                    {
                        text: `${page}/${Math.ceil(userfiles.length/6)}`,
                        callback_data: 'pusto',
                    },
                    {
                        text: '‚û°',
                        callback_data: 'ringth',
                    }
                ]);

            }

            if(userfiles.length <= 6) {

                inline_keyboard.push([
                    {
                        text: ' ',
                        callback_data: 'pusto',
                    },
                    {
                        text: `${page}/${Math.ceil(userfiles.length/6)}`,
                        callback_data: 'pusto',
                    },
                    {
                        text: ' ',
                        callback_data: 'pusto',
                    }
                ]);

            }

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'files',
            }]);

            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }

        for (let i=(page-1)*6; i < userfiles.length; i++) {

            if (i==(((page-1)*6)+6)) break;

            if (i % 3 === 0) {
                mass++;
                inline_keyboard.push([]);
            } 

            text += `\n\n*${i+1});* \`${files[userfiles[i]].name}\`\n‚îú *–¢–∏–ø*: ${files[userfiles[i]].type}\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[userfiles[i]].size)}–ú–±\`\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[userfiles[i]].dateAdded)}`
            inline_keyboard[mass].push({
                text: `üíæ –§–∞–π–ª #${i+1}`,
                callback_data: `${files[userfiles[i]].id}`,
            });

        }   
        if(page == Math.ceil(userfiles.length/6)) {

            inline_keyboard.push([
                {
                    text: ' ',
                    callback_data: 'pusto',
                },
                {
                    text: `${page}/${Math.ceil(userfiles.length/6)}`,
                    callback_data: 'pusto',
                },
                {
                    text: '‚û°',
                    callback_data: 'ringth',
                }
            ]);

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'files',
            }]);

            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }
        if(page !== Math.ceil(userfiles.length/6)) {
            inline_keyboard.push([
                {
                    text: '‚¨Ö',
                    callback_data: 'left',
                },
                {
                    text: `${page}/${Math.ceil(userfiles.length/6)}`,
                    callback_data: 'pusto',
                },
                {
                    text: '‚û°',
                    callback_data: 'ringth',
                }
            ]);
            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'files',
            }]);
            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;
        }
    }

    if(data === 'sharedringth') {

        var userfiles = users[chatId].filescods;
        ifdbusers(chatId, username, dateAdded);
        page = users[messageId].page;

        if(page == 1) page++;
        if(page > Math.ceil(userfiles.length/6)) page = Math.ceil(userfiles.length/6);
        users[chatId].page = page;
        savedbusers();

        var text = "";
        var inline_keyboard = [[]];
        var mass = 0;

        for(let i=(page-1)*6; i < userfiles.length; i++) {

            if (i==((page-1)*6)+6) break;

            if (i % 3 === 0) {
                mass++;
                inline_keyboard.push([]);
            } 

            text += `\n\n*${i+1});* \`${files[userfiles[i]].name}\`\n‚îú *–¢–∏–ø*: ${files[userfiles[i]].type}\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[userfiles[i]].size)}–ú–±\`\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[userfiles[i]].dateAdded)}`
            inline_keyboard[mass].push({
                text: `‚ö° –§–∞–π–ª #${i+1}`,
                callback_data: `${files[userfiles[i]].id}`,
            });

        }   
        if(userfiles.length <= 6) {

            inline_keyboard.push([
                {
                    text: ' ',
                    callback_data: 'pusto',
                },
                {
                    text: `${page}/${Math.ceil(userfiles.length/6)}`,
                    callback_data: 'pusto',
                },
                {
                    text: ' ',
                    callback_data: 'pusto',
                }
            ]);

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'sharedfiles',
            }]);

            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }
        if(page == Math.ceil(userfiles.length/6)) {

            inline_keyboard.push([
                {
                    text: '‚¨Ö',
                    callback_data: 'sharedleft',
                },
                {
                    text: `${page}/${Math.ceil(userfiles.length/6)}`,
                    callback_data: 'pusto',
                },
                {
                    text: ' ',
                    callback_data: 'pusto',
                }
            ]);

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'sharedfiles',
            }]);

            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }
        if(page !== Math.ceil(userfiles.length/6)) {

            inline_keyboard.push([
                {
                    text: '‚¨Ö',
                    callback_data: 'sharedleft',
                },
                {
                    text: `${page}/${Math.ceil(userfiles.length/6)}`,
                    callback_data: 'pusto',
                },
                {
                    text: '‚û°',
                    callback_data: 'sharedringth',
                }
            ]);

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'sharedfiles',
            }]);

            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }

    }

    if(data === 'ringth') {

        var userfiles = users[chatId].filescods;
        ifdbusers(chatId, username, dateAdded);
        page = users[messageId].page;

        if(page == 1) page++;
        if(page > Math.ceil(userfiles.length/6)) page = Math.ceil(userfiles.length/6);
        users[chatId].page = page;
        savedbusers();

        var text = "";
        var inline_keyboard = [[]];
        var mass = 0;

        for(let i=(page-1)*6; i < userfiles.length; i++) {

            if (i==((page-1)*6)+6) break;

            if (i % 3 === 0) {
                mass++;
                inline_keyboard.push([]);
            } 

            text += `\n\n*${i+1});* \`${files[userfiles[i]].name}\`\n‚îú *–¢–∏–ø*: ${files[userfiles[i]].type}\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[userfiles[i]].size)}–ú–±\`\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[userfiles[i]].dateAdded)}`
            inline_keyboard[mass].push({
                text: `üíæ –§–∞–π–ª #${i+1}`,
                callback_data: `${files[userfiles[i]].id}`,
            });

        }   

        if(userfiles.length <= 6) {

            inline_keyboard.push([
                {
                    text: ' ',
                    callback_data: 'pusto',
                },
                {
                    text: `${page}/${Math.ceil(userfiles.length/6)}`,
                    callback_data: 'pusto',
                },
                {
                    text: ' ',
                    callback_data: 'pusto',
                }
            ]);

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'files',
            }]);
            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }

        if(page == Math.ceil(userfiles.length/6)) {

            inline_keyboard.push([
                {
                    text: '‚¨Ö',
                    callback_data: 'left',
                },
                {
                    text: `${page}/${Math.ceil(userfiles.length/6)}`,
                    callback_data: 'pusto',
                },
                {
                    text: ' ',
                    callback_data: 'pusto',
                }
            ]);

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'files',
            }]);
            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }

        if(page !== Math.ceil(userfiles.length/6)) {

            inline_keyboard.push([
                {
                    text: '‚¨Ö',
                    callback_data: 'left',
                },
                {
                    text: `${page}/${Math.ceil(userfiles.length/6)}`,
                    callback_data: 'pusto',
                },
                {
                    text: '‚û°',
                    callback_data: 'ringth',
                }
            ]);

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'files',
            }]);

            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
            return;

        }

    }

    if(data === 'sharedfiles') {

        var userfiles = users[chatId].shared;
        ifdbusers(chatId, username, dateAdded);

        users[messageId].page;
        users[messageId].page = 1;
        savedbusers();
        
        page = 1

        if(userfiles.length > 0) {

            var mass = 0;
            var text = "";
            var inline_keyboard = [[]];

            for(i=0; i < userfiles.length; i++) {

                if(i==6) break;

                if (i % 3 === 0) {
                    mass++;
                    inline_keyboard.push([]);
                } 

                text += `\n\n*${i+1});* \`${files[userfiles[i]].name}\`\n‚îú *–¢–∏–ø*: ${files[userfiles[i]].type}\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[userfiles[i]].size)}–ú–±\`\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[userfiles[i]].dateAdded)}`
                inline_keyboard[mass].push({
                    text: `‚ö° –§–∞–π–ª #${i+1}`,
                    callback_data: `${files[userfiles[i]].id}`,
                });

            }

            if(userfiles.length > 6) {

                inline_keyboard.push([
                    {
                        text: ' ',
                        callback_data: 'pusto',
                    },
                    {
                        text: `${page}/${Math.ceil(userfiles.length/6)}`,
                        callback_data: 'pusto',
                    },
                    {
                        text: '‚û°',
                        callback_data: 'sharedringth',
                    }
                ]);

            }

            if(userfiles.length <= 6) {

                inline_keyboard.push([
                    {
                        text: ' ',
                        callback_data: 'pusto',
                    },
                    {
                        text: `${page}/${Math.ceil(userfiles.length/6)}`,
                        callback_data: 'pusto',
                    },
                    {
                        text: ' ',
                        callback_data: 'pusto',
                    }
                ]);

            }

            inline_keyboard.push([{
                text: '‚¨Ö –ù–∞–∑–∞–¥',
                callback_data: 'files',
            }]);

            const inlineKeyboard = {inline_keyboard}
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
        
        }

        if(userfiles.length == 0) {
            const inlineKeyboard = {
                inline_keyboard: [
                    [
                        {
                            text: '‚¨Ö –ù–∞–∑–∞–¥',
                            callback_data: 'files',
                        },
                    ]
                ],
            };
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–û—à–∏–±–∫–∞*\n\n‚ùï –î–ª—è *–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ* —Ñ–∞–π–ª–∞ *–ø–æ –∫–ª—é—á—É*, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–ª—é—á *–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ* —Ñ–∞–π–ª–∞ *–≤ —á–∞—Ç* —Å –±–æ—Ç–æ–º.\n\n*–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*: /help`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
        }
    }

    if (data === 'myfiles') {
        console.log(users[chatId].filescods)
        var userfiles = users[chatId].filescods;
        ifdbusers(chatId, username, dateAdded);
    
        users[chatId].page = users[chatId].page || 1;
        var page = users[chatId].page;
    
        savedbusers();
        if (userfiles.length > 0) {
            var text = "";
            var inline_keyboard = [];
            var mass = 0;
    
            for (var i = 0; i < userfiles.length; i++) {
                if (i == 6) break;
    
                if (i % 3 === 0) {
                    inline_keyboard.push([]);
                }
    
                text += `\n\n*${i + 1});* \`${files[userfiles[i]].name}\`\n‚îú *–¢–∏–ø*: ${files[userfiles[i]].type}\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[userfiles[i]].size)}–ú–±\`\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[userfiles[i]].dateAdded)}`;
                inline_keyboard[mass].push({
                    text: `üíæ –§–∞–π–ª #${i + 1}`,
                    callback_data: `${files[userfiles[i]].id}`,
                });
    
                if ((i + 1) % 3 === 0) mass++;
            }
    
            if (userfiles.length > 6) {
                inline_keyboard.push([
                    { text: ' ', callback_data: 'pusto' },
                    { text: `${page}/${Math.ceil(userfiles.length / 6)}`, callback_data: 'pusto' },
                    { text: '‚û°', callback_data: 'ringth' }
                ]);
            }
    
            if (userfiles.length <= 6) {
                inline_keyboard.push([
                    { text: ' ', callback_data: 'pusto' },
                    { text: `${page}/${Math.ceil(userfiles.length / 6)}`, callback_data: 'pusto' },
                    { text: ' ', callback_data: 'pusto' }
                ]);
            }
    
            inline_keyboard.push([{ text: '‚¨Ö –ù–∞–∑–∞–¥', callback_data: 'files' }]);
    
            const inlineKeyboard = { inline_keyboard };
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ñ–∞–π–ª –∏–∑ *${userfiles.length}* —à—Ç.${text}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
        } else {
            const inlineKeyboard = {
                inline_keyboard: [[{ text: '‚¨Ö –ù–∞–∑–∞–¥', callback_data: 'files' }]],
            };
            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–û—à–∏–±–∫–∞*\n\nüìã –°—É—Ç—å: –°–ø–∏—Å–æ–∫ *–≤–∞—à–∏—Ö* —Ñ–∞–π–ª–æ–≤ –ø—É—Å—Ç.\n–î–ª—è *—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è* —Ñ–∞–π–ª–∞ –≤ –±–æ—Ç–µ –æ—Ç–ø—Ä–∞–≤—Ç–µ –µ–≥–æ –≤ —á–∞—Ç.\n\n*–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*: /help`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
        }
    }
    

    if(data === 'files') {

        ifdbusers(chatId, username, dateAdded);

        const filescodslength = (users[chatId].filescods).length;
        const sharedlength = (users[chatId].shared).length;

        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                    text: `üìÑ –ú–æ–∏ —Ñ–∞–π–ª—ã - ${(users[chatId].filescods).length}`,
                    callback_data: 'myfiles',
                    },
                    {
                    text: `ü§ù –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã - ${(users[chatId].shared).length}`,
                    callback_data: 'sharedfiles',
                    },
                ],
                [
                    {
                        text: 'üîë –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª—é—á',
                        callback_data: 'key',
                    },
                ],
                [
                    {
                        text: '‚¨Ö –ù–∞–∑–∞–¥',
                        callback_data: 'backmenu',
                    },
                ]
            ],
        };

        const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
        const captionText = `üì∞ –ú–µ–Ω—é: *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π* —Ä–∞–∑–¥–µ–ª –∏/–∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ\n\nüíæ *–§–∞–π–ª—ã*:\n‚îú *–ö–æ–ª-–≤–æ —Ñ–∞–π–ª–æ–≤*: ${filescodslength}\n‚îî *–ö–æ–ª-–≤–æ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*: ${sharedlength}\n\n*–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*: /help`;
        await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
        await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard, });
    
    }

    if(data === 'backmenu') {

        ifdbusers(chatId, username, dateAdded);

        const status = users[chatId].status;
        const userId = users[chatId].id;
        const filescodslength = (users[chatId].filescods).length;
        const sharedlength = (users[chatId].shared).length;
    
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                        text: 'üìÑ –§–∞–π–ª—ã',
                        callback_data: 'files',
                    },
                ],
                [
                    {
                        text: '‚öô –ê–∫–∫–∞—É–Ω—Ç',
                        callback_data: 'account',
                    },
                    {
                        text: 'üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞',
                        callback_data: 'help',
                    },
                ],
            ],
        };

        const mediaPhoto = `https://media.discordapp.net/attachments/1088507989956231188/1113582608643805236/Frame_3.png?width=1440&height=555`;
        const captionText = `üì∞ –ú–µ–Ω—é: *–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞*\n–í—ã–±–µ—Ä–∏—Ç–µ *–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ* –¥–µ–π—Å—Ç–≤–∏–µ\n\nü§ñ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ë–æ—Ç–µ*:\n‚îú *–ê–π–¥–∏*: \`${config.id}\`\n‚îú *–í–µ—Ä—Å–∏—è*: \`${config.version}\`\n‚îî *–°—Å—ã–ª–∫–∞*: ${config.botlink}\n\nüîé *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—Å*:\n‚îú *–ê–π–¥–∏*: \`${userId}\`\n‚îú *–£—Ä–æ–≤–µ–Ω—å*: \`${status}\`\n‚îú *–ö–æ–ª-–≤–æ —Ñ–∞–π–ª–æ–≤*: ${filescodslength}\n‚îî *–ö–æ–ª-–≤–æ –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*: ${sharedlength}\n\n*–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*: /help`;
        await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
        await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
    
    }

    if(data === 'yes_deletefile') {

        if(!files[users[messageId].filespage]);
        const fileId = users[messageId].filespage;

        const name = files[fileId].name;

        let shareduserid = users[chatId].shared;
        let fileaccess = files[fileId].access;      
        shareduserid = shareduserid.filter((n) => {return n != fileId});
        fileaccess = fileaccess.filter((n) => {return n != chatId});
        users[chatId].shared = shareduserid;
        files[fileId].access = fileaccess;

        savedbfiles();
        savedbusers();

        for (let i = 0; i < fileaccess.length; i++) {
            console.log(fileId);
            console.log(users[fileaccess[i]]);
            let sharedMemberId = users[fileaccess[i]].shared;
            sharedMemberId = sharedMemberId.filter((n) => {return n != fileId});
            users[fileaccess[i]].shared = sharedMemberId;
            savedbfiles();
            savedbusers();
            console.log(users[fileaccess[i]]);
        }

        files[fileId].access = fileaccess;

        savedbfiles();
        savedbusers();

        files[fileId] = {
            id:false,
            name:"Deleted",
            type:false,
            size:false,
            code:false,
            userid:false,
            groupIdFile:false,
            access:false,
            dateAdded:false
        }

        var usersfilescods = users[chatId].filescods
        usersfilescods = usersfilescods.filter((n) => {return n != fileId});
        users[chatId].filescods = usersfilescods

        savedbusers();
        savedbfiles();

        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                        text: '‚¨Ö –ù–∞–∑–∞–¥',
                        callback_data: 'files',
                    },
                ],
            ],
        };

        const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
        const captionText = `üì∞ –ú–µ–Ω—é: *–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª —É —Å–µ–±—è*\n\n‚òëÔ∏è –í—ã *—É—Å–ø–µ—à–Ω–æ* —É–¥–∞–ª–∏–ª–∏ –∏–∑ —Å–≤–æ–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ *–¥–æ—Å—Ç—É–ø–Ω—ã—Ö* —Ñ–∞–π–ª–æ–≤ \`${name}\`.`;
        await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
        await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
    
    }

    if(data === 'deletefile') {

        if(!files[users[messageId].filespage]);
        filepick = users[messageId].filespage;

        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                        text: '‚òëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª',
                        callback_data: 'yes_deletefile',
                    },
                    {
                        text: '‚¨Ö –ù–∞–∑–∞–¥',
                        callback_data: filepick,
                    },
                ],
            ],
        };

        const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
        const captionText = `üì∞ –ú–µ–Ω—é: *–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª*\n\n‚òëÔ∏è –£–≤–µ—Ä–µ–Ω—ã –ª–∏ –í—ã, —á—Ç–æ *—Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å* —Ñ–∞–π–ª\`${files[filepick].name}\`, *–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –µ–≥–æ –±—É–¥–µ—Ç –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å!*.\n\n_–î–ª—è —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ_`;
        await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
        await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
    
    }

    if(data === 'yes_userdeletefile') {

        if(!files[users[messageId].filespage]);
        const fileId = users[messageId].filespage;

        const name = files[fileId].name;

        let shareduserid = users[chatId].shared;
        let fileaccess = files[fileId].access;      
        shareduserid = shareduserid.filter((n) => {return n != fileId});
        fileaccess = fileaccess.filter((n) => {return n != chatId});
        users[chatId].shared = shareduserid;
        files[fileId].access = fileaccess;

        savedbfiles();
        savedbusers();

        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                        text: '‚¨Ö –ù–∞–∑–∞–¥',
                        callback_data: 'sharedfiles',
                    },
                ],
            ],
        };

        const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
        const captionText = `üì∞ –ú–µ–Ω—é: *–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª —É —Å–µ–±—è*\n\n‚òëÔ∏è –í—ã *—É—Å–ø–µ—à–Ω–æ* —É–¥–∞–ª–∏–ª–∏ –∏–∑ —Å–≤–æ–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ *–¥–æ—Å—Ç—É–ø–Ω—ã—Ö* —Ñ–∞–π–ª–æ–≤ \`${name}\`.`;
        await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
        await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
    
    }

    if(data === 'userdeletefile') {

        if(!files[users[messageId].filespage]);
        filepick = users[messageId].filespage;

        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                        text: '‚òëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª —É —Å–µ–±—è',
                        callback_data: 'yes_userdeletefile',
                    },
                    {
                        text: '‚¨Ö –ù–∞–∑–∞–¥',
                        callback_data: filepick,
                    },
                ],
            ],
        };

        const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
        const captionText = `üì∞ –ú–µ–Ω—é: *–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª —É —Å–µ–±—è*\n\n‚òëÔ∏è –£–≤–µ—Ä–µ–Ω—ã –ª–∏ –í—ã, —á—Ç–æ *—Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å* –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ *–¥–æ—Å—Ç—É–ø–Ω—ã—Ö* —Ñ–∞–π–ª–æ–≤ \`${files[filepick].name}\`, –≤–µ—Ä–Ω—É—Ç—å –µ–≥–æ –í—ã *—Å–º–æ–∂–µ—Ç–µ* —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∞–º –¥–∞–¥—É—Ç *–∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞*.\n\n_–î–ª—è —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ_`;
        await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
        await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
    
    }

    if(data === 'help') {

        ifdbusers(chatId, username, dateAdded);
        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                        text: 'üõ° –ü–æ–¥–¥–µ—Ä–∂–∫–∞',
                        url: 'https://t.me/Scarl3t_support_bot',
                    },
                    {
                        text: '‚¨Ö –ù–∞–∑–∞–¥',
                        callback_data: 'backmenu',
                    },
                ],
            ],
        };

        const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303374409918/Frame_5.png?width=1440&height=555";
        const captionText = `üì∞ –ú–µ–Ω—é: *–ü–æ–¥–¥–µ—Ä–∂–∫–∞*\n\n‚Åâ –ï—Å–ª–∏ —É –í–∞—Å *–≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞*, *–≤–æ–ø—Ä–æ—Å* –∏–ª–∏ *–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ*, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –Ω–∞—à—É —Å–ª—É–∂–±—É *–ø–æ–¥–¥–µ—Ä–∂–∫–∏*, –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ *–Ω–∞–∂–º–∏—Ç–µ* –Ω–∞ –∫–Ω–æ–ø–∫—É *"üõ° –ü–æ–¥–¥–µ—Ä–∂–∫–∞"* –Ω–∏–∂–µ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –í—ã *–ø–æ–ª—É—á–∏—Ç–µ* –ø—Ä–æ–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É /start.`;
        await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
        await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
    
    }

    if (data === 'accesslist') {
        // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è ifdbusers –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        ifdbusers(chatId, username, dateAdded);
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if (!files[users[messageId].filespage]) {
            // –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ª—É—á–∞—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ñ–∞–π–ª–∞
            // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
            return;
        }
        filepick = users[messageId].filespage;
        
        var text = "";
        const file = files[filepick];
        const accessFiles = file ? file.access : null;
    
        if (accessFiles && Array.isArray(accessFiles)) {
            for (let i = 0; i < accessFiles.length; i++) {
                text += `\n*${i + 1})* [@${users[accessFiles[i]].username}](tg://user?id=${accessFiles[i]})`;
            }
        } else {
            text = "\n`–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç`";
        }
    
        const inlineKeyboard = {
            inline_keyboard: [
                [
                    {
                        text: '‚¨Ö –ù–∞–∑–∞–¥',
                        callback_data: filepick,
                    },
                ]
            ],
        };
    
        const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
        const captionText = `üì∞ –ú–µ–Ω—é: *–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏–º–µ—é—â–∏–µ –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É*\n\nüíæ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*:\n‚îú *–ù–∞–∑–≤–∞–Ω–∏–µ*: \`${file.name}\`\n‚îú *–¢–∏–ø*: ${file.type}\n‚îî *–ò–º–µ—é—Ç –¥–æ—Å—Ç—É–ø*: *${file.access.length}*\n\nüë• *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏*:${text}`;
        await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
        await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
    }
    
    

    if(!buttonsnames.includes(data)) {

        ifdbusers(chatId, username, dateAdded);
        const usershared = users[chatId].shared;
        const userfilescods = users[chatId].filescods;

        if(userfilescods.includes(data)) {
            file = data;
            users[messageId].filespage = data;
            users[chatId].filespage = data;
            savedbusers();
            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            const inlineKeyboard = {
                inline_keyboard: [
                    [
                        {
                            text: '‚úâ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –≤ —á–∞—Ç',
                            callback_data: 'sendfile',
                        },
                    ],
                    [
                        {
                            text: 'üìä –°–ø–∏—Å–æ–∫ –ª—é–¥–µ–π —Å –¥–æ—Å—Ç—É–ø–æ–º',
                            callback_data: 'accesslist',
                        },
                    ],
                    [
                        {
                            text: 'üîë –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞',
                            callback_data: 'regenerationkey',
                        },
                        {
                            text: 'üóë –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª',
                            callback_data: 'deletefile',
                        },
                    ],
                    [
                        {
                            text: '‚¨Ö –ù–∞–∑–∞–¥',
                            callback_data: 'myfiles',
                        },
                    ],
                ],
            };

            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–î–µ–π—Å—Ç–≤–∏—è —Å —Ñ–∞–π–ª–æ–º*\n\nüíæ *–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*:\n‚îú *–ù–∞–∑–≤–∞–Ω–∏–µ*: \`${files[file].name}\`\n‚îú *–¢–∏–ø*: ${files[file].type}\n‚îú *–ö–ª—é—á*: \`${files[file].code}\`\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[file].size)}–ú–±\`\n‚îú *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[file].dateAdded)}\n‚îî *–ò–º–µ—é—Ç –¥–æ—Å—Ç—É–ø*: *${(files[file].access).length}*`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
            return;

        }

        if(usershared.includes(data)) {

            file = data;
            users[messageId].filespage = data;
            users[chatId].filespage = data;

            savedbusers();

            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
            const inlineKeyboard = {
                inline_keyboard: [
                    [
                        {
                            text: '‚úâ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –≤ —á–∞—Ç',
                            callback_data: 'sendfile',
                        },
                        {
                            text: '‚ùå –£–¥–∞–ª–∏—Ç—å —É —Å–µ–±—è',
                            callback_data: 'userdeletefile',
                        },
                    ],
                    [
                        {
                            text: '‚¨Ö –ù–∞–∑–∞–¥',
                            callback_data: 'sharedfiles',
                        },
                    ],
                ],
            };

            const mediaPhoto = "https://media.discordapp.net/attachments/1088507989956231188/1113903303613497344/Frame_6.png?width=1440&height=555";
            const captionText = `üì∞ –ú–µ–Ω—é: *–î–µ–π—Å—Ç–≤–∏—è —Å —Ñ–∞–π–ª–æ–º*\n\nüíæ *–ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*:\n‚îú *–ù–∞–∑–≤–∞–Ω–∏–µ*: \`${files[file].name}\`\n‚îú *–¢–∏–ø*: ${files[file].type}\n‚îú *–†–∞–∑–º–µ—Ä*: \`${bytesToMegabytes(files[file].size)}–ú–±\`\n‚îî *–î–æ–±–∞–≤–ª–µ–Ω–æ*: ${convertUnixTimeToDateFormat(files[file].dateAdded)}`;
            await bot.editMessageMedia({ type: "photo", media: mediaPhoto }, { chat_id: chatId, message_id: messageId });
            await bot.editMessageCaption(captionText, { chat_id: chatId, message_id: messageId, parse_mode: "Markdown", reply_markup: inlineKeyboard });
            return;

        }
    }

});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤
bot.on('document', async (msg) => {

    if (msg.chat.type === 'supergroup' || msg.chat.type === 'group') return;

    const chatId = msg.chat.id;
    const dateAdded = Date.now();
    const username = msg.from.username;
    const fileSize = msg.document.file_size;
    const fileName = msg.document.file_name;

    savedbusers();
    savedbfiles();

    renameusername(chatId, username);

    // –û—Ç–æ—Å–ª–∞—Ç—å —Ñ–∞–π–ª
    const fileId = msg.document.file_id;
    await bot.sendDocument(config.groupID, fileId)
        .then((message) => {

            const MessageFileId = message.message_id; // Id —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ —Å —ç—Ç–∏–º —Ñ–∞–π–ª–æ–º
            
            if(MessageFileId) {
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ db
                ifdbusers(chatId, username, dateAdded);
                const inlineKeyboard = {
                    inline_keyboard: [
                        [
                            {
                            text: 'üìÑ –§–∞–π–ª—ã',
                            callback_data: 'files',
                            },
                        ],
                    ],
                };
                const codePassword = generatePassword();
                const NumberFile = makeid(16);
                files[codePassword] = {
                    fileid:NumberFile,
                    code:codePassword,
                    dateAdded:Date.now(),
                    userid:chatId,
                    memberused:[],
                }
                files[NumberFile] = {
                    id:NumberFile,
                    name:fileName,
                    type:"–§–∞–π–ª",
                    size:fileSize,
                    code:codePassword,
                    userid:chatId,
                    groupIdFile:message,
                    access:[],
                    dateAdded:Date.now()
                }
                users[chatId].filescods.push(NumberFile)
                console.log(users[chatId].filescods)
                savedbusers();
                savedbfiles();
            
                const captionText = `‚ùï –§–∞–π–ª *"${fileName}"* –±—ã–ª *—É—Å–ø–µ—à–Ω–æ* –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –Ω–∏–º *–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å* –º–µ–Ω—é *"–§–∞–π–ª—ã"*.\n\nüíø *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ*:\n‚îú *–ù–∞–∑–≤–∞–Ω–∏–µ*: \`${fileName}\`\n‚îú *–ö–ª—é—á*: \`${codePassword}\`\n‚îú *–¢–∏–ø*: *–§–∞–π–ª*\n‚îî *–í–µ—Å*: \`${bytesToMegabytes(fileSize)}–ú–±\``;
                bot.sendPhoto(msg.chat.id, "https://media.discordapp.net/attachments/1088507989956231188/1113811713943425024/Frame_8.png?width=1440&height=555", { caption: captionText, parse_mode: "Markdown", reply_markup: inlineKeyboard, reply_to_message_id: msg.message_id });
            
            };
        })
        .catch((error) => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
        });

});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (msg) => {

    if (msg.chat.type === 'supergroup' || msg.chat.type === 'group') return;

    const chatId = msg.chat.id;
    var text = msg.text;
    const dateAdded = Date.now();
    const messageId = msg.message_id;
    const username = msg.from.username;

    ifdbusers(chatId, username, dateAdded);
    renameusername(chatId, username);

    const pattern = /^[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}$/;

    if (pattern.test(text)) {

        const key = text;
        if(!files[key]);{

            const inlineKeyboard = {
                inline_keyboard: [
                    [
                        {
                        text: '‚ùå –£–¥–∞–ª–∏—Ç—å',
                        callback_data: 'delete',
                        },
                    ],
                ],
            };
            
            await bot.deleteMessage(chatId, messageId).catch(() => {});;
            await bot.sendMessage(chatId, `ü§î –ö–ª—é—á \`${key}\` *–Ω–µ –Ω–∞–π–¥–µ–Ω*`, { parse_mode: "Markdown", reply_markup: inlineKeyboard });
            

        };

        if(files[key]);{

            if(files[key] && files[files[key].fileid].code !== key) {


                const inlineKeyboard = {
                    inline_keyboard: [
                        [
                            {
                            text: '‚ùå –£–¥–∞–ª–∏—Ç—å',
                            callback_data: 'delete',
                            },
                        ],
                    ],
                };
                
                await bot.deleteMessage(chatId, messageId);
                await bot.sendMessage(chatId, `ü§î –ö–ª—é—á \`${key}\` *–Ω–µ –Ω–∞–π–¥–µ–Ω*`, { parse_mode: "Markdown", reply_markup: inlineKeyboard });
                return;

            }
            if(files[key] && files[files[key].fileid].code !== key) {


                if(files[files[key].fileid].name == "Deleted") {

                    const inlineKeyboard = {
                        inline_keyboard: [
                            [
                                {
                                    text: '‚ùå –£–¥–∞–ª–∏—Ç—å',
                                    callback_data: 'delete',
                                },
                            ],
                        ],
                    };
                    
                    await bot.deleteMessage(chatId, messageId);
                    await bot.sendMessage(chatId, `ü§î –ö–ª—é—á \`${key}\` *–Ω–µ –Ω–∞–π–¥–µ–Ω*`, { parse_mode: "Markdown", reply_markup: inlineKeyboard });
                    return;

                }
                if(files[files[key].fileid].name !== "Deleted") {

                    const fileaccess = files[files[key].fileid].access;    

                    if(fileaccess.includes(chatId)) {
                        const inlineKeyboard = {
                            inline_keyboard: [
                                [
                                    {
                                        text: '‚ùå –£–¥–∞–ª–∏—Ç—å',
                                        callback_data: 'delete',
                                    },
                                ],
                            ],
                        };
                        
                        await bot.deleteMessage(chatId, messageId);
                        await bot.sendMessage(chatId, `ü§î –í—ã *—É–∂–µ –∏–º–µ–µ—Ç–µ* –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É \`${files[files[key].fileid].name}\``, { parse_mode: "Markdown", reply_markup: inlineKeyboard });
                        return;

                    }         

                    if(files[files[key].fileid].userid == chatId) {

                        const inlineKeyboard = {
                            inline_keyboard: [
                                [
                                    {
                                        text: '‚ùå –£–¥–∞–ª–∏—Ç—å',
                                        callback_data: 'delete',
                                    },
                                ],
                            ],
                        };
                        
                        await bot.deleteMessage(chatId, messageId);
                        await bot.sendMessage(chatId, `ü§î –í—ã *—É–∂–µ –∏–º–µ–µ—Ç–µ* –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É \`${files[files[key].fileid].name}\``, { parse_mode: "Markdown", reply_markup: inlineKeyboard });
                        return;

                    }
                    if(files[files[key].fileid].code == key) {

                        const file = files[key].fileid;
                        const name = files[file].name;
                        const type = files[file].type;
                        const size = files[file].size;
                        const userid = files[file].userid;

                        var shareduserid = users[chatId].shared;
                        var memberusedkey = files[key].memberused;
                        memberusedkey.push(chatId);
                        fileaccess.push(chatId);
                        shareduserid.push(file);
                        savedbfiles();
                        savedbusers();
                        const inlineKeyboard = {
                            inline_keyboard: [
                                [
                                    {
                                        text: '‚ùå –£–¥–∞–ª–∏—Ç—å',
                                        callback_data: 'delete',
                                    },
                                ],
                            ],
                        };

                        await bot.deleteMessage(chatId, messageId);
                        const captionText = `‚ùï –§–∞–π–ª *"${name}"* –±—ã–ª *—É—Å–ø–µ—à–Ω–æ* –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É *–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤*.\n\nüíø *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ*:\n‚îú *–ù–∞–∑–≤–∞–Ω–∏–µ*: \`${name}\`\n‚îú *–í–ª–∞–¥–µ–ª–µ—Ü*: [@${users[userid].username}](tg://user?id=${userid});\n‚îú *–¢–∏–ø*: ${type}\n‚îî *–í–µ—Å*: \`${bytesToMegabytes(size)}–ú–±\``;
                        bot.sendPhoto(msg.chat.id, "https://media.discordapp.net/attachments/1088507989956231188/1113811713943425024/Frame_8.png?width=1440&height=555", { caption: captionText, parse_mode: "Markdown", reply_markup: inlineKeyboard });

                        await bot.sendMessage(userid, `üîë [@${users[chatId].username}](tg://user?id=${chatId}); *–ø–æ–ª—É—á–∏–ª*(*–∞*) –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª—É \`${name}\` –ø–æ –∫–ª—é—á—É`, { parse_mode: "Markdown", reply_markup: inlineKeyboard });                        

                    }
                }

            }
        };
    
    };

    if (msg.photo) {

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
        const photo = msg.photo[msg.photo.length - 1];
        const fileId = photo.file_id;
        const fileSize = photo.file_size;
        const fileName = `–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${(users[chatId].filescods).length}`;

        savedbusers();
        savedbfiles();
    
        // –û—Ç–æ—Å–ª–∞—Ç—å —Ñ–∞–π–ª
        await bot.sendPhoto(config.groupID, fileId)
            .then((message) => {
                const MessageFileId = message.message_id; // Id —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ —Å —ç—Ç–∏–º —Ñ–∞–π–ª–æ–º
                if(MessageFileId) {
                    // –ü—Ä–æ–≤–µ—Ä–∫–∞ db
                    ifdbusers(chatId, username, dateAdded);
                    
                    const inlineKeyboard = {
                        inline_keyboard: [
                            [
                                {
                                    text: 'üìÑ –§–∞–π–ª—ã',
                                    callback_data: 'files',
                                },
                            ],
                        ],
                    };
                    const codePassword = generatePassword();
                    const NumberFile = makeid(16);
                    files[codePassword] = {
                        fileid:NumberFile,
                        code:codePassword,
                        dateAdded:Date.now(),
                        userid:chatId,
                        memberused:[],
                    }
                    files[NumberFile] = {
                        id:NumberFile,
                        name:fileName,
                        type:"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
                        size:fileSize,
                        code:codePassword,
                        userid:chatId,
                        groupIdFile:message,
                        access:[],
                        dateAdded:Date.now()
                    }
                    var usersfilescods = users[chatId].filescods
                    usersfilescods.push(NumberFile)
                    savedbusers();
                    savedbfiles();
                
                    const captionText = `‚ùï –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ *"${fileName}"* –±—ã–ª *—É—Å–ø–µ—à–Ω–æ* –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –Ω–∏–º *–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å* –º–µ–Ω—é *"–§–∞–π–ª—ã"*.\n\nüíø *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ*:\n‚îú *–ù–∞–∑–≤–∞–Ω–∏–µ*: \`${fileName}\`\n‚îú *–ö–ª—é—á*: \`${codePassword}\`\n‚îú *–¢–∏–ø*: *–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ*\n‚îî *–í–µ—Å*: \`${bytesToMegabytes(fileSize)}–ú–±\``;                
                    bot.sendPhoto(chatId, "https://media.discordapp.net/attachments/1088507989956231188/1113811713943425024/Frame_8.png?width=1440&height=555", { caption: captionText, parse_mode: "Markdown", reply_markup: inlineKeyboard, reply_to_message_id: msg.message_id });
                }
            })
            .catch((error) => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
            });
    
    };

    if (msg.video) {

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
        const video = msg.video;
        const fileId = video.file_id;
        const fileSize = video.file_size;
        const fileName = video.file_name;

        savedbusers();
        savedbfiles();
    
        // –û—Ç–æ—Å–ª–∞—Ç—å —Ñ–∞–π–ª
        await bot.sendVideo(config.groupID, fileId)
            .then(async (message) => {

                const MessageFileId = message.message_id; // Id —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ —Å —ç—Ç–∏–º —Ñ–∞–π–ª–æ–º
                if(MessageFileId) {

                    // –ü—Ä–æ–≤–µ—Ä–∫–∞ db
                    ifdbusers(chatId, username, dateAdded);
                    
                    const inlineKeyboard = {
                        inline_keyboard: [
                            [
                                {
                                    text: 'üìÑ –§–∞–π–ª—ã',
                                    callback_data: 'files',
                                },
                            ],
                        ],
                    };
                    const codePassword = generatePassword();
                    const NumberFile = makeid(16);
                    files[codePassword] = {
                        fileid:NumberFile,
                        code:codePassword,
                        dateAdded:Date.now(),
                        userid:chatId,
                        memberused:[],
                    }
                    files[NumberFile] = {
                        id:NumberFile,
                        name:fileName,
                        type:"–í–∏–¥–µ–æ",
                        size:fileSize,
                        code:codePassword,
                        userid:chatId,
                        groupIdFile:message,
                        access:[],
                        dateAdded:Date.now()
                    }
                    var usersfilescods = users[chatId].filescods
                    usersfilescods.push(NumberFile)
                    savedbusers();
                    savedbfiles();
                    const captionText = `‚ùï –í–∏–¥–µ–æ *"${fileName}"* –±—ã–ª *—É—Å–ø–µ—à–Ω–æ* –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –Ω–∏–º *–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å* –º–µ–Ω—é *"–§–∞–π–ª—ã"*.\n\nüíø *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ*:\n‚îú *–ù–∞–∑–≤–∞–Ω–∏–µ*: \`${fileName}\`\n‚îú *–ö–ª—é—á*: \`${codePassword}\`\n‚îú *–¢–∏–ø*: *–í–∏–¥–µ–æ*\n‚îî *–í–µ—Å*: \`${bytesToMegabytes(fileSize)}–ú–±\``;
                    bot.sendPhoto(msg.chat.id, "https://media.discordapp.net/attachments/1088507989956231188/1113811713943425024/Frame_8.png?width=1440&height=555", { caption: captionText, parse_mode: "Markdown", reply_markup: inlineKeyboard, reply_to_message_id: msg.message_id });
                
                }
            })
            .catch((error) => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
            });
    
    };

    if (msg.text) {

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É
        var content = msg.text;
        var contentediting = content.substr(0, 1);
        if(contentediting !== "/") return;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ –±–æ—Ç–µ 
        var command = config.command
        var contentcommand = content.replace("/", "");
        if(command.includes(contentcommand)) return;
    
        // –û—à–∏–±–∫–∞
        const captionText = `üöÄ –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Ä–∞–±–æ—Ç—É –≤–º–µ—Å—Ç–µ!\n\nüìù –ú–æ—è *–æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è* –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ–±—ã —Å–ª—É–∂–∏—Ç—å —Ç–µ–±–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ *—Ñ–∞–π–ª–æ–æ–±–º–µ–Ω–Ω–∏–∫–∞* –∏ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö. –Ø –≥–æ—Ç–æ–≤ —Ö—Ä–∞–Ω–∏—Ç—å *—Ç–≤–æ–∏ —Ñ–∞–π–ª—ã* –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, *–¥–æ—Å—Ç—É–ø–Ω–æ–π —Ç–µ–±–µ* –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.\n\n‚ùï –í—Å–µ –≤–∞—à–∏ *—Ñ–∞–π–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤–∞–º*, –Ω–æ –í—ã *–º–æ–∂–µ—Ç–µ* –¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏ —Å –¥—Ä—É–∑—å—è–º–∏ –ø–æ *–∫–æ–¥—É* –∏–ª–∏ –¥a–≤–∞—Ç—å *–¥–æ—Å—Ç—É–ø* —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è *–ø–æ —Ä–∞–∑–º–µ—Ä—É* –∏ *–∫–æ–ª–∏—á–µ—Å—Ç–≤—É* —Ñ–∞–π–ª–æ–≤ *–Ω–µ—Ç*.\n\nüõ° –Ø —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω *—ç–Ω—Ç—É–∑–∏–∞—Å—Ç–∞–º–∏* –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª–µ–Ω, —Ç–≤–æ—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–ª—è –º–µ–Ω—è *–Ω–∞–∏–≤—ã—Å—à–∏–π* –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç! –í–ª–∞–¥–µ–ª—å—Ü–∞–º *Scarl3t* –±–µ–∑—Ä–∞–∑–ª–∏—á–Ω–æ, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —Ç—ã *—Å–æ—Ö—Ä–∞–Ω—è–µ—à—å* —É –º–µ–Ω—è, –µ—Å–ª–∏ —ç—Ç–æ *–Ω–µ –º–µ—à–∞–µ—Ç* –º–æ–µ–π —Ä–∞–±–æ—Ç–µ.\n\nüì• –ß—Ç–æ–±—ã *—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å* —Ñ–∞–π–ª, –ø—Ä–æ—Å—Ç–æ *–æ—Ç–ø—Ä–∞–≤—å* –µ–≥–æ –º–Ω–µ, –∏ —è —Å–æ—Ö—Ä–∞–Ω—é –µ–≥–æ *–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ*. –¢—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—à—å *–ø–æ–ª—É—á–∏—Ç—å* –∫ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø, –ø—Ä–æ—Å—Ç–æ *–æ–±—Ä–∞—Ç–∏–≤—à–∏—Å—å* –∫–æ –º–Ω–µ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º. –Ø –≥–æ—Ç–æ–≤ —Å—Ç–∞—Ç—å —Ç–≤–æ–∏–º –Ω–∞–¥–µ–∂–Ω—ã–º *–ø–æ–º–æ—â–Ω–∏–∫–æ–º* –≤ —Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏ –ø–µ—Ä–µ–¥–∞—á–∏ —Ç–≤–æ–∏—Ö –¥–∞–Ω–Ω—ã—Ö! \n\n*–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é*: /menu`;
        await bot.sendMessage(msg.chat.id, `ü§î –Ø *–Ω–µ –º–æ–≥—É* –Ω–∞–π—Ç–∏ –∫–æ–º–∞–Ω–¥—É ${content}`, { parse_mode: "Markdown" });
        await bot.sendPhoto(msg.chat.id, "https://media.discordapp.net/attachments/1088507989956231188/1113582608316633160/Frame_2.png?width=1440&height=555", { caption: captionText, parse_mode: "Markdown" });
    
    };

});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç
bot.on('new_chat_members', (msg) => {

    const chatId = msg.chat.id;
    
    if (chatId.toString() === config.groupID_MVP) {

        ifdbusers();
        if(users[msg.new_chat_member.id].status == "User") {

            users[msg.new_chat_member.id].status = "MVP";
            savedbusers();

        };

        const mention = `[@${msg.new_chat_member.first_name}](tg://user?id=${msg.new_chat_member.id});`;
        bot.sendMessage(chatId, `üëã *–ü—Ä–∏–≤–µ—Ç*, ${mention}! –î–æ–±—Ä–æ *–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å* –∫ –Ω–∞–º!`, { parse_mode: "Markdown" });
    
    };

});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.on('polling_error', (error) => {

    console.error('–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞:', error);

});

console.log(`\x1b[32m[START]\x1b[0m –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: \x1b[33mScarlet\x1b[0m, —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º Telegram`);